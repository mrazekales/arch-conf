#!/bin/bash
# ----------------------------------------------------------------------------------------
#           Arch Linux Installer
# ----------------------------------------------------------------------------------------
# author:     Mrazek Ales
#             https://github.com/mrazekales
#
# project:    https://github.com/mrazekales/myarch-installer
#
# license:    LGPL-3.0 (http://opensource.org/licenses/lgpl-3.0.html)
#
# ----------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------
# MAIN MENU
# ----------------------------------------------------------------------------------------
main_menu(){
  if [ "$1" = "" ]; then
    nextitem="."
  else
    nextitem=$1
  fi
  options=()
  options+=("$txtrankmirrors" "$txtrmdone")
  options+=("$txtmakepartitions" "$txtmpdone")
  options+=("$txtselectpartitions" "$txtspdone")
  options+=("$txtformatpartitions" "$txtfpdone")
  options+=("$txtmount" "$txtmountdone")
  options+=("" "")
  options+=("$txtkeymap" "$keymap")
  options+=("$txtlanguage" "$applanguage")
  options+=("" "")
  options+=("" "")
  options+=("$txtreboot" "")
  sel=$(whiptail --backtitle "$apptitle" --title "$txtmainmenutitle" --menu "" --cancel-button "$txtexit" --default-item "$nextitem" 0 0 0 \
    "${options[@]}" \
    3>&1 1>&2 2>&3)
  if [ "$?" = "0" ]; then
    case $sel in
      "$txtrankmirrors")
      rank_mirrors
      ;;
      "$txtmakepartitions")
      partitioning_menu
        nextitem="$txtselectpartitions"
      ;;
      "$txtselectpartitions")
      select_partitions
        nextitem="$txtformatpartitions"
      ;;
      "$txtformatpartitions")
      format_partitions
        nextitem="$txtmount"
      ;;
      "$txtmount")
        mount_partitions
        nextitem="$txtreboot"
      ;;
      "$txtkeymap")
        set_keymap
      ;;
      "$txtlanguage")
      load_language
      ;;
      "$txtreboot")
        rebootpc
      ;;
    esac
    mainmenu "$nextitem"
  else
    clear
  fi
}

# ----------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------
# GLOBAL FUNCTIONS
# ----------------------------------------------------------------------------------------
check_isefi(){
  if [ -d "/sys/firmware/efi/efivars" ]; then
    efi=1
    echo "EFI Available: YES"
  else
    efi=0
    echo "EFI Available: NO"
  fi
}

choose_editor(){
  options=()
  options+=("nano" "")
  options+=("vim" "")
  options+=("vi" "")
  options+=("edit" "")
  sel=$(whiptail --backtitle "$apptitle" --title "$txteditor" --menu "" 0 0 0 \
    "${options[@]}" \
    3>&1 1>&2 2>&3)
  if [ "$?" = "0" ]; then
    EDITOR=$sel
  fi
}

load_language(){
  source languages/$applanguage
}

set_keymap(){
  items=$(find /usr/share/kbd/keymaps/ -type f -printf "%f\n" | sort -V)
  options=()
  for item in $items; do
    options+=("${item%%.*}" "")
  done
  keymap=$(whiptail --backtitle "$apptitle" --title "$txtsetkeymap" --menu "" 0 0 0 \
    "${options[@]}" \
    3>&1 1>&2 2>&3)
  if [ "$?" = "0" ]; then
    clear
    echo "loadkeys $keymap"
    loadkeys $keymap
    pressanykey
  fi
}

pressanykey(){
  read -n1 -p "$txtpressanykey"
}

rebootpc(){
  if (whiptail --backtitle "$apptitle" --title "$txtreboot" --yesno "$txtreboot ?" --defaultno 0 0) then
    clear
    reboot
  fi
}

# ----------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------
# START OF THE PROGRAM
# ----------------------------------------------------------------------------------------
apptitle="Arch Linux Installer - Version: 0.1 (LGPLv3)"
applanguage="english"

# check if efi is available
clear
check_isefi
echo "EFI DONE"

# load language strings
echo "Loading strings"
load_language
# load keyboard
echo "Loading keymap"
loadkeys $keymap

# main menu start
echo "Program will start"
pressanykey
main_menu

exit 0

# --------------------------------------------------------
